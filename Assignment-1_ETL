
This is the first assignment for the Coursera course "Advanced Machine Learning and Signal Processing"

Just execute all cells one after the other and you are done - just note that in the last one you have to update your email address (the one you've used for coursera) and obtain a submission token, you get this from the programming assignment directly on coursera.

This notebook is designed to run in a IBM Watson Studio default runtime (NOT the Watson Studio Apache Spark Runtime as the default runtime with 1 vCPU is free of charge). Therefore, we install Apache Spark in local mode for test purposes only. Please don't use it in production.

In case you are facing issues, please read the following two documents first:

https://github.com/IBM/skillsnetwork/wiki/Environment-Setup

https://github.com/IBM/skillsnetwork/wiki/FAQ

Then, please feel free to ask:

https://coursera.org/learn/machine-learning-big-data-apache-spark/discussions/all

Please make sure to follow the guidelines before asking a question:

https://github.com/IBM/skillsnetwork/wiki/FAQ#im-feeling-lost-and-confused-please-help-me

If running outside Watson Studio, this should work as well. In case you are running in an Apache Spark context outside Watson Studio, please remove the Apache Spark setup in the first notebook cells.
--------------------------------------------------------------------
In [1]:
Source code{
from IPython.display import Markdown, display
def printmd(string):
    display(Markdown('# <span style="color:red">'+string+'</span>'))


if ('sc' in locals() or 'sc' in globals()):
    printmd('<<<<<!!!!! It seems that you are running in a IBM Watson Studio Apache Spark Notebook. Please run it in an IBM Watson Studio Default Runtime (without Apache Spark) !!!!!>>>>>')
}
In [2]:
Source code{
!pip install pyspark==2.4.5
}
Collecting pyspark==2.4.5
  Downloading https://files.pythonhosted.org/packages/9a/5a/271c416c1c2185b6cb0151b29a91fff6fcaed80173c8584ff6d20e46b465/pyspark-2.4.5.tar.gz (217.8MB)
     |████████████████████████████████| 217.8MB 172kB/s  eta 0:00:01     |███████████████████████▏        | 157.4MB 9.6MB/s eta 0:00:07�████████████████████████▊  | 202.2MB 15.1MB/s eta 0:00:02
Collecting py4j==0.10.7 (from pyspark==2.4.5)
  Downloading https://files.pythonhosted.org/packages/e3/53/c737818eb9a7dc32a7cd4f1396e787bd94200c3997c72c1dbe028587bd76/py4j-0.10.7-py2.py3-none-any.whl (197kB)
     |████████████████████████████████| 204kB 35.2MB/s eta 0:00:01
Building wheels for collected packages: pyspark
  Building wheel for pyspark (setup.py) ... done
  Stored in directory: /home/dsxuser/.cache/pip/wheels/bf/db/04/61d66a5939364e756eb1c1be4ec5bdce6e04047fc7929a3c3c
Successfully built pyspark
Installing collected packages: py4j, pyspark
Successfully installed py4j-0.10.7 pyspark-2.4.5

In [3]:
Source code{
try:
    from pyspark import SparkContext, SparkConf
    from pyspark.sql import SparkSession
except ImportError as e:
    printmd('<<<<<!!!!! Please restart your kernel after installing Apache Spark !!!!!>>>>>')
    }
In [4]:
Source code{
sc = SparkContext.getOrCreate(SparkConf().setMaster("local[*]"))

spark = SparkSession \
    .builder \
    .getOrCreate()
    }
In [5]:
Source code{
!wget https://github.com/IBM/coursera/raw/master/coursera_ml/a2.parquet
}
--2020-06-19 06:01:20--  https://github.com/IBM/coursera/raw/master/coursera_ml/a2.parquet
Resolving github.com (github.com)... 140.82.114.3
Connecting to github.com (github.com)|140.82.114.3|:443... connected.
HTTP request sent, awaiting response... 301 Moved Permanently
Location: https://github.com/IBM/skillsnetwork/raw/master/coursera_ml/a2.parquet [following]
--2020-06-19 06:01:20--  https://github.com/IBM/skillsnetwork/raw/master/coursera_ml/a2.parquet
Reusing existing connection to github.com:443.
HTTP request sent, awaiting response... 302 Found
Location: https://raw.githubusercontent.com/IBM/skillsnetwork/master/coursera_ml/a2.parquet [following]
--2020-06-19 06:01:20--  https://raw.githubusercontent.com/IBM/skillsnetwork/master/coursera_ml/a2.parquet
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 199.232.8.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|199.232.8.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 59032 (58K) [application/octet-stream]
Saving to: ‘a2.parquet.6’

100%[======================================>] 59,032      --.-K/s   in 0.003s  

2020-06-19 06:01:20 (17.4 MB/s) - ‘a2.parquet.6’ saved [59032/59032]


In [6]:
Source code{
df=spark.read.load('a2.parquet')
df.createOrReplaceTempView("df")
spark.sql("SELECT * from df").show()
}
+-----+-----------+-------------------+-------------------+-------------------+
|CLASS|   SENSORID|                  X|                  Y|                  Z|
+-----+-----------+-------------------+-------------------+-------------------+
|    0|         26| 380.66434005495194| -139.3470983812975|-247.93697521077704|
|    0|         29| 104.74324299209692| -32.27421440203938|-25.105013725863852|
|    0| 8589934658| 118.11469236129976| 45.916682927433534| -87.97203782706572|
|    0|34359738398| 246.55394030642543|-0.6122810693132044|-398.18662513951506|
|    0|17179869241|-190.32584900181487|  234.7849657520335|-206.34483804019288|
|    0|25769803830| 178.62396382387422| -47.07529438881511|  84.38310769821979|
|    0|25769803831|  85.03128805189493|-4.3024316644854546|-1.1841857567516714|
|    0|34359738411| 26.786262674736566| -46.33193951911338| 20.880756008396055|
|    0| 8589934592|-16.203752396859194| 51.080957032176954| -96.80526656416971|
|    0|25769803852|   47.2048142440404|  -78.2950899652916| 181.99604091494786|
|    0|34359738369| 15.608872398939273| -79.90322809181754|  69.62150711098005|
|    0|         19|-4.8281721129789315| -67.38050508399905| 221.24876396496404|
|    0|         54| -98.40725712852762|-19.989364074314732|  -302.695196085276|
|    0|17179869313| 22.835845394816594|   17.1633660118843| 32.877914832011385|
|    0|34359738454|  84.20178070080324| -32.81572075916947| -48.63517643958031|
|    0|          0|  56.54732521345129| -7.980106018032676|  95.05162719436447|
|    0|17179869201|  -57.6008655247749|  5.135393798773895| 236.99158698947267|
|    0|17179869308| -65.59264738389012| -48.92660057215126| -61.58970715383383|
|    0|25769803790|  34.82337351291005|  9.483542084393937|  197.6066372962772|
|    0|25769803825|  39.80573823439121|-0.7955236412785212| -79.66652640650325|
+-----+-----------+-------------------+-------------------+-------------------+
only showing top 20 rows

​
In [7]:
Source code{
!rm -Rf a2_m1.json
}
In [8]:
Source code{
df = df.repartition(1)
df.write.json('a2_m1.json')
}
In [9]:
Source code{
!rm -f rklib.py
!wget https://raw.githubusercontent.com/IBM/coursera/master/rklib.py
}
--2020-06-19 06:02:39--  https://raw.githubusercontent.com/IBM/coursera/master/rklib.py
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 199.232.8.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|199.232.8.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 2540 (2.5K) [text/plain]
Saving to: ‘rklib.py’

100%[======================================>] 2,540       --.-K/s   in 0s      

2020-06-19 06:02:39 (30.4 MB/s) - ‘rklib.py’ saved [2540/2540]


In [10]:
Source code{
import zipfile
import os

def zipdir(path, ziph):
    for root, dirs, files in os.walk(path):
        for file in files:
            ziph.write(os.path.join(root, file))

zipf = zipfile.ZipFile('a2_m1.json.zip', 'w', zipfile.ZIP_DEFLATED)
zipdir('a2_m1.json', zipf)
zipf.close()
}
In [11]:
Source code{
!base64 a2_m1.json.zip > a2_m1.json.zip.base64
}
In [12]:
Source code{
from rklib import submit
key = "1injH2F0EeiLlRJ3eJKoXA"
part = "wNLDt"
email = "ravi_kundu.scsebtech@galgotiasuniversity.edu.in"
token = "1yIkgRrvGc9iBq8M"  #(have a look here if you need more information on how to obtain the token https://youtu.be/GcDo0Rwe06U?t=276)

with open('a2_m1.json.zip.base64', 'r') as myfile:
    data=myfile.read()
submit(email, token, key, part, [part], data)
}
Submission successful, please check on the coursera grader page for the status
-------------------------
{"elements":[{"itemId":"O8C69","id":"f_F-qCtuEei_fRLwaVDk3g~O8C69~fnPRVbHzEeqZMxLyl3-vRw","courseId":"f_F-qCtuEei_fRLwaVDk3g"}],"paging":{},"linked":{}}
